<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huangjicheng.top.vepdao.mapper.AuthMapper">

    <resultMap id="AuthResultMap" type="com.huangjicheng.top.vepdao.entity.Auth">
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="authField">
      id,name,pid,level,create_time,update_time,path
    </sql>

    <select id="get" parameterType="Integer" resultMap="AuthResultMap">
        select
        <include refid="authField"/>
        from auth where id = #{id}
    </select>

    <select id="getList" parameterType="com.huangjicheng.top.vepdao.entity.Auth" resultMap="AuthResultMap">
        select
        <include refid="authField"/>
        from auth
        <trim prefix="where" prefixOverrides="and">
            <if test="name != null and name.length() > 0">and name like '%${name}%'</if>
            <if test="level != null">and level=#{level}</if>
            <if test="pid != null">and pid=#{pid}</if>
            <if test="ids != null">
                id in
                <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </select>


    <delete id="delete" parameterType="Integer">
        delete from auth where id = #{id}
    </delete>

    <update id="update" parameterType="com.huangjicheng.top.vepdao.entity.Auth">
        update auth
        <set>
            <if test="name!= null and name != '' ">
                name = #{name},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <insert id="save" parameterType="com.huangjicheng.top.vepdao.entity.Auth">
        insert into auth (name,pid,level,create_time)
        values (#{name},#{pid},#{level},#{createTime})
    </insert>

    <select id="getByAuthPId"  parameterType="Integer" resultMap="AuthResultMap">
        select a.id from auth  a where a.pid  =#{pid}
    </select>
</mapper>